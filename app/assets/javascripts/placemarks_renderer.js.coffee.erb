class @PlacemarksRenderer

  constructor: ->

  @geoObjectCollections = {}
  @geo_objects_ary = []
  @clasterer = {}

  @presets:
    yandex: [
      {
        name:'islands#nightStretchyIcon'
        imageSize: Array(2)
      }
      {
        name:'islands#redStretchyIcon'
        imageSize: Array(2)
      }
      {
        name:'islands#grayIcon'
        imageSize: [20,20]
      }
    ]
    custom: [
      <% Widget.each do |w| %>
        {
          name: '<%=w.type%>'
          imageHref: "<%= asset_path('placemarks.png') %>"
          # imageSize: <%= w.js_image_size %>
          imageSize: [40,48]
          imageClipRect: <%= w.js_clip_rect %>
          pisL: 0
        }
        <% end %>
    ]

  @addPresets: =>
    for preset in @presets.custom
      window.ymaps.option.presetStorage.add preset.name,
        iconImageHref: preset: preset.imageHref

  @createGeoObjectCollections: =>
    for key, o of @presets
      for preset in o
        options = {preset: preset.name, iconImageHref: preset.imageHref, iconImageSize: preset.imageSize, iconImageClipRect: preset.imageClipRect}

        if key == 'custom'
          options['iconLayout'] = 'default#image'

        collection_key = preset.name
        collection_value = new window.ymaps.GeoObjectCollection({}, options)
        @geoObjectCollections[collection_key] = collection_value

  @putPlacemarksToMap: =>
    console.log "putPlacemarksToMap begin"
    greyGeoObjects = []
    cw_list = CarWashLoader.cw_list
    if cw_list?
      for car_wash in cw_list
        coordinates = car_wash.coords
        properties =
          balloonContent: Balloon.body(car_wash, car_wash.url)
          hintContent: Hint.content(car_wash)
          car_wash_id: car_wash.id
          iconContent: if car_wash.action_on_map then car_wash.main_action else ""
        options =
          balloonContentBodyLayout : Balloon.bodyLayout()
        placemark = new ymaps.Placemark(coordinates, properties, options)
        @geo_objects_ary.push(placemark)

        if car_wash.grey
          #@geoObjectCollections['my#grey'].add(placemark)
          placemark.options.set('preset', 'islands#grayIcon')
          placemark.options.set('iconImageSize', [20,20])
          #@geoObjectCollections['islands#grayIcon'].add(placemark)
          greyGeoObjects.push placemark
        else
          @geoObjectCollections[car_wash.widget_type].add(placemark)
          # if car_wash.signal
          #   if car_wash.blink
          #     @geoObjectCollections['my#green_blink'].add(placemark)
          #   else if car_wash.action_on_map
          #     @geoObjectCollections['islands#nightStretchyIcon'].add(placemark)
          #   else if car_wash.videoned
          #     @geoObjectCollections['my#videoned'].add(placemark)
          #   else if car_wash.discounted
          #     @geoObjectCollections['my#discounted'].add(placemark)
          #   else if car_wash.brended
          #     @geoObjectCollections['my#brended'].add(placemark)
          #   else if car_wash.gasolined
          #     @geoObjectCollections['my#gasolined'].add(placemark)
          #   else if car_wash.repaired
          #     @geoObjectCollections['my#repaired'].add(placemark)
          #   else if car_wash.tired
          #     @geoObjectCollections['my#tired'].add(placemark)
          #   else
          #     @geoObjectCollections['my#green_not_blink'].add(placemark)
          # else
          #   if car_wash.blink
          #     @geoObjectCollections['my#red_blink'].add(placemark)
          #   else if car_wash.action_on_map
          #     @geoObjectCollections['islands#redStretchyIcon'].add(placemark)
          #   else if car_wash.videoned
          #     @geoObjectCollections['my#videoned'].add(placemark)
          #   else if car_wash.discounted
          #     @geoObjectCollections['my#discounted'].add(placemark)
          #   else if car_wash.brended
          #     @geoObjectCollections['my#brended'].add(placemark)
          #   else if car_wash.gasolined
          #     @geoObjectCollections['my#gasolined'].add(placemark)
          #   else if car_wash.repaired
          #     @geoObjectCollections['my#repaired'].add(placemark)
          #   else if car_wash.tired
          #     @geoObjectCollections['my#tired'].add(placemark)
          #   else
          #     @geoObjectCollections['my#red_not_blink'].add(placemark)

      clusterIcons = [
        href: "<%= asset_path('grey_hvost.png') %>"
        size: [40, 40]
        offset: [-20, -20]
      ]
      myIconContentLayout = ymaps.templateLayoutFactory.createClass(
        '<div style="color: #444; font-weight: bold;position: relative;top: -7px;left: -5px;">$[properties.geoObjects.length]</div>')
      PlacemarksRenderer.clusterer = new ymaps.Clusterer
        # clusterIcons: clusterIcons
        clusterNumbers: 30
        # clusterIconContentLayout: myIconContentLayout
        size: [10,10]
        gridSize: 196
        # groupByCoordinates: false
        # clusterDisableClickZoom: false
      
      for collection_name, collection of @geoObjectCollections
        if collection_name == "islands#grayIcon"
          console.log "gray"
          #PlacemarksRenderer.clusterer.add collection
        else
          MapRenderer.myMap.geoObjects.add(collection)
    PlacemarksRenderer.clusterer.add greyGeoObjects
    MapRenderer.myMap.geoObjects.add PlacemarksRenderer.clusterer
    console.log "putPlacemarksToMap end"

  @render: =>
    @addPresets()
    @createGeoObjectCollections()
    @putPlacemarksToMap()
    dfd = $.Deferred()

    numOfPointsOnMap = ymaps.geoQuery(@geo_objects_ary).getLength()
    numOfCarWashes = CarWashLoader.cw_list.length
    flag = (numOfPointsOnMap == numOfCarWashes)
    until flag
      numOfPointsOnMap = ymaps.geoQuery(@geo_objects_ary).getLength()
      flag = (numOfPointsOnMap == numOfCarWashes)
    dfd.resolve()
    return dfd.promise()

